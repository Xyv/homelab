# TODO:
### ADD BLUEPRINT FOR AUTHENTIK
### Use syncthing to sync config?
## Authentik: https://docs.goauthentik.io/docs/providers/proxy/server_traefik
## LDAP: https://leo.leung.xyz/wiki/FreeIPA
## Add cockpit for docker/host management
## Traefik
##   - Add metrics
##   - Add tracing
##   - Add middlewares:
##     - http headers
##     - rate limites
## Protect jellyfin apps behind authentik (requires the user to login from a webbrowser before to whitelist the IP)
## https://github.com/sam-6174/jellytin/blob/master/docs/jellyfin_client_whitelist.md

# Apps:
##

# Wireguard + ui
# DockerGe
# Sylog grabber/viewer? Datadog?
# bookstack
# Homepage
# Linkstack
# Paperless
# PrivateBin
# MkDocs
# FreshRSS

# Obsidian
# Excalidraw
# Focalboard
# Joplin
# Memos

# Define sensitive variables in write protected files (chmod 600) and use then as secrets
# Makes it possible to share/git the docker-compose.yml file without sharing sensitive data
# Make sure the secrets folder is added to the .gitignore file
secrets:
  duckdns_token:
    file: ${DOCKER_CONFIG_DIR}/secrets/duckdns_token.secrets
  authentik_db_name:
    file: ${DOCKER_CONFIG_DIR}/secrets/authentik_db_name.secrets
  authentik_db_user:
    file: ${DOCKER_CONFIG_DIR}/secrets/authentik_db_user.secrets
  authentik_db_password:
    file: ${DOCKER_CONFIG_DIR}/secrets/authentik_db_password.secrets
  authentik_secret_key:
    file: ${DOCKER_CONFIG_DIR}/secrets/authentik_secret_key.secrets
  geoipupdate_account_id:
    file: ${DOCKER_CONFIG_DIR}/secrets/geoipupdate_account_id.secrets
  geoipupdate_license_key:
    file: ${DOCKER_CONFIG_DIR}/secrets/geoipupdate_license_key.secrets
  email_user:
    file: ${DOCKER_CONFIG_DIR}/secrets/email_user_mailapfr.secrets
  email_password:
    file: ${DOCKER_CONFIG_DIR}/secrets/email_password_mailapfr.secrets
  diun_discord_hook:
    file: ${DOCKER_CONFIG_DIR}/secrets/diun_discord_hook.secrets
  pihole_password:
    file: ${DOCKER_CONFIG_DIR}/secrets/pihole_password.secrets

########################### EXTENSION FIELDS
# Helps eliminate repetition of sections
# More Info on how to use this: https://github.com/htpcBeginner/docker-traefik/pull/228

# Common environment values
x-environment: &default-tz-puid-pgid
  TZ: $TZ
  PUID: $PUID
  PGID: $PGID

x-security: &common-key-security
  security_opt:
    - no-new-privileges

# Keys common to some of the core services that we always to automatically restart on failure
x-common-keys-core: &common-keys-core
  <<: *common-key-security
  restart: always
  labels:
    - "diun.enable=true"
    - "diun.max_tags=4"
    - "diun.sort_tags=semver"
  profiles:
    - all
    - core

# Keys common to some of the core services that we always to automatically restart on failure
x-common-keys-authentik: &common-keys-authentik
  <<: *common-key-security
  restart: always
  networks:
    oauth_backend:
  labels:
    - "diun.enable=true"
    - "diun.max_tags=4"
    - "diun.sort_tags=semver"
  profiles:
    - all
    - core
    - authentik

# Keys common to some of the dependent services/apps
x-common-keys-apps: &common-keys-apps
  <<: *common-key-security
  restart: unless-stopped
  networks:
    proxy:
  environment:
    <<: *default-tz-puid-pgid
  labels:
    - "diun.enable=true"
    - "diun.max_tags=4"
    - "diun.sort_tags=semver"
  profiles:
    - all
    - apps

# Keys common to some of the services in media-services.txt
x-common-keys-media: &common-keys-media
  <<: *common-key-security
  restart: "no"
  networks:
    proxy:
  environment:
    <<: *default-tz-puid-pgid
  profiles:
    - all
    - media

networks:
  default:
  proxy:
    # Reverse proxy
    name: proxy
  socket_proxy:
    # Docker socket proxy
    name: socket_proxy
  protonmail_bridge:
    name: protonmail_bridge
  oauth_backend:
    # Authentication backend
    name: oauth_backend

volumes:
  letsencrypt_certificates:
    name: letsencrypt_certificates
  protonmail:
    name: protonmail
  authentik_database:
    name: authentik_database
  authentik_redis:
    name: authentik_redis
  geoip:
    name: authentik_geoip
  nfs_books:
    driver: local
    name: books    # this is the name of the volume in /var/lib/docker/volumes
    driver_opts:
      type: nfs
      o: nfsvers=4,addr=${NAS_IP},rw
      device: ":${BOOKS_DIR}"

# include:
#   - ./compose/docker-socket-proxy.yml
#   - ./compose/traefik.yml
#   - ./compose/authentik.yml

services:
  ############### CORE Services
  traefik:
    extends:
      service: traefik
      file: ./compose/traefik.yml
    <<: *common-keys-core
    depends_on:
      - docker-socket-proxy

  docker-socket-proxy:
    extends:
      service: docker-socket-proxy
      file: ./compose/docker-socket-proxy.yml
    <<: *common-keys-core

  diun:
    extends:
      service: diun
      file: ./compose/diun.yml
    <<: *common-keys-core

  protonmail-bridge:
    extends:
      service: protonmail-bridge
      file: ./compose/protonmail-bridge.yml
    <<: *common-keys-core
    networks:
      protonmail_bridge:

  pihole:
    extends:
      service: pihole
      file: ./compose/pihole.yml
    <<: *common-keys-core
    # Pihole requires to run suid/sudo
    security_opt:
        - no-new-privileges:false

  orbital-sync:
    extends:
      service: orbital-sync
      file: ./compose/orbital-sync.yml
    <<: *common-keys-core

  ############### Authentik Services
  authentik-db:
    extends:
      service: authentik-db
      file: ./compose/authentik.yml
    <<: *common-keys-authentik

  authentik-redis:
    extends:
      service: authentik-redis
      file: ./compose/authentik.yml
    <<: *common-keys-authentik

  authentik-worker:
    extends:
      service: authentik-worker
      file: ./compose/authentik.yml
    <<: *common-keys-authentik
    depends_on:
      - authentik-db
      - authentik-redis

  authentik-geoip:
    extends:
      service: authentik-geoip
      file: ./compose/authentik.yml
    <<: *common-keys-authentik

  authentik:
    extends:
      service: authentik
      file: ./compose/authentik.yml
    <<: *common-keys-authentik
    networks:
      proxy:
      oauth_backend:
      protonmail_bridge:
    depends_on:
      - authentik-db
      - authentik-redis

  ############### APPS Services
  whoami:
    extends:
      service: whoami
      file: ./compose/whoami.yml
    <<: *common-keys-apps

  calibre:
    extends:
      service: calibre
      file: ./compose/calibre.yml
    <<: *common-keys-apps

  calibre-web:
    extends:
      service: calibre-web
      file: ./compose/calibre.yml
    <<: *common-keys-apps

  ############### MEDIA Services
  prowlarr:
    extends:
      service: prowlarr
      file: ./compose/prowlarr.yml
    <<: *common-keys-media

  readarr:
    extends:
      service: readarr
      file: ./compose/readarr.yml
    <<: *common-keys-media
    depends_on:
      - prowlarr
