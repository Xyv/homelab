# Define sensitive variables in write protected files (chmod 600) and use then as secrets
# Makes it possible to share/git the docker-compose.yml file without sharing sensitive data
# Make sure the secrets folder is added to the .gitignore file
secrets:
  duckdns_token:
    file: ${DOCKER_CONFIG_DIR}/secrets/duckdns_token.secrets

networks:
  default:
  proxy:
    name: proxy
  socket_proxy:
    name: socket_proxy

volumes:
  letsencrypt_certificates:
    name: letsencrypt_certificates
  nfs_books:
    driver: local
    name: books    # this is the name of the volume in /var/lib/docker/volumes
    driver_opts:
      type: nfs
      o: nfsvers=4,addr=${NAS_IP},rw
      device: ":${BOOKS_DIR}"

include:
  - ./compose/traefik.yml

services:
  docker-socket-proxy:
    image: tecnativa/docker-socket-proxy
    container_name: ${PROJECT_NAME}-docker-socket-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    environment:
      TZ: ${TZ}
      LOG_LEVEL: info # debug,info,notice,warning,err,crit,alert,emerg
      CONTAINERS: 1
      IMAGES: 1
    security_opt:
      - no-new-privileges=true
    networks:
      socket_proxy:

  whoami:
    image: traefik/whoami
    container_name: ${PROJECT_NAME}-whoami
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    labels:
      traefik.enable: true
      traefik.http.routers.whoami.entrypoints: websecure
    networks:
      proxy:

  calibre:
    image: lscr.io/linuxserver/calibre:${CALIBRE_VERSION}
    container_name: ${PROJECT_NAME}-calibre
    restart: unless-stopped
    security_opt:
      - no-new-privileges=true
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    volumes:
      - ${DOCKER_CONFIG_DIR}/calibre/config:/config:rw
      - nfs_books:/data/media/books:rw
    labels:
      traefik.enable: true
      traefik.http.routers.calibre.entrypoints: websecure
      traefik.http.services.calibre.loadbalancer.server.port: 8080
    networks:
      proxy:

  calibre-web:
    image: lscr.io/linuxserver/calibre-web:${CALIBRE_WEB_VERSION}
    container_name: ${PROJECT_NAME}-calibre-web
    restart: unless-stopped
    security_opt:
      - no-new-privileges=true
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      DOCKER_MODS: linuxserver/mods:universal-calibre
    volumes:
      - ${DOCKER_CONFIG_DIR}/calibre/calibre-web:/config:rw
      - nfs_books:/data/media/books:rw
    labels:
      traefik.enable: true
      traefik.http.routers.calibre-web.entrypoints: websecure
      traefik.http.routers.calibre-web.rule: Host(`books.${DOMAIN_NAME}`)
      traefik.http.services.calibre-web.loadbalancer.server.port: 8083
      # Creates a middleware that adds in a header to tell Calibre-Web the X-Scheme is https
      # (this is similar to the nginx examples) and required for Kobo Sync
      traefik.http.middlewares.kobo-sync-headers.headers.customrequestheaders.X-Scheme: https
      # traefik.http.routers.calibre-web.middlewares: secure-headers,kobo-sync-headers
      traefik.http.routers.calibre-web.middlewares: kobo-sync-headers
    networks:
      proxy:

  prowlarr:
    image: lscr.io/linuxserver/prowlarr
    container_name: ${PROJECT_NAME}-prowlarr
    restart: unless-stopped
    security_opt:
      - no-new-privileges=true
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    volumes:
      - ${DOCKER_CONFIG_DIR}/prowlarr:/config:rw
      # - ${DOCKERNASSTORAGEDIR}:/data
    labels:
      traefik.enable: true
      traefik.http.routers.prowlarr.entrypoints: websecure
    networks:
      proxy:

  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: ${PROJECT_NAME}-readarr
    restart: unless-stopped
    security_opt:
      - no-new-privileges=true
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    volumes:
      - ${DOCKER_CONFIG_DIR}/readarr:/config:rw
      - nfs_books:/data/media/books:rw
    labels:
      traefik.enable: true
      traefik.http.routers.readarr.entrypoints: websecure
    networks:
      proxy:
    depends_on:
      - prowlarr
